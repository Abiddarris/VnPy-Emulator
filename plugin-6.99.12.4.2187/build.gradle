plugins {
    id 'com.android.application'
    id 'com.github.jk1.dependency-license-report'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'com.abiddarris.renpy.plugin6991242187'
    compileSdk 33
    buildToolsVersion '34.0.0'
    
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    defaultConfig {
        multiDexEnabled true
        applicationId 'com.abiddarris.renpy.plugin6991242187'
        minSdk 16
        targetSdk 31
        versionCode 3
        versionName "v6.99.12.4.2187.3"
        
        vectorDrawables { 
            useSupportLibrary true
        }
    }
    
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile rootProject.file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            //remove this if you don't have key
            signingConfig signingConfigs.release
        }
    }
    
    splits {
        abi {
            enable true
            reset()
            
            include "armeabi", "x86"
        }
    }

    packagingOptions {
        doNotStrip "jniLibs/armeabi/*.so"
        doNotStrip "jniLibs/x86/*.so"
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
    
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
    }
    
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':plugin')
    
    implementation 'org.kamranzafar:jtar:2.3'
    
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
}

def dest = rootProject.file("releases")

def copy(src, dest) {
    def dir = file(src)
    dir.listFiles().each(file -> {
        def fileName = file.getName()
        if(!fileName.endsWith('.apk')) {
            return
        }
        
        def abi = fileName.split("-")[2] 
        try(def input = new BufferedInputStream(new FileInputStream(file));
            def output = new BufferedOutputStream(
                new FileOutputStream(new File(dest, "VnPy-Emulator-Plugin-6.99.12.4.2187-${abi}.apk")));){
            
            def buf = new byte[8192]    
            def len;
            while((len = input.read(buf)) != -1) {
                output.write(buf, 0, len);
            }
            output.flush();
        }
    })
}

task copyDebug {
    dependsOn 'assembleDebug'
    
    doLast {
        copy("$buildDir/outputs/apk/debug", dest)
    }
}

task copyRelease {
    dependsOn 'assembleRelease'
    
    doLast {
        copy("$buildDir/outputs/apk/release", dest)
    }
}